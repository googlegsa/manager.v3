<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>

	<bean id="ApplicationContextProperties"
		class="java.lang.String">
		<constructor-arg value="/WEB-INF/applicationContext.properties"/>
	</bean>

	<bean id="EncryptedPropertyPlaceholderConfigurer"
		class="com.google.enterprise.connector.instantiator.EncryptedPropertyPlaceholderConfigurer">
		<property name="location" ref="ApplicationContextProperties"/>
	</bean>	

	<bean id="FeedConnection"
		class="com.google.enterprise.connector.pusher.GsaFeedConnection">
		<constructor-arg index="0" type="java.lang.String"
			value="${gsa.feed.host}" />
		<constructor-arg index="1" type="int" value="${gsa.feed.port}" />
	</bean>

	<bean id="Pusher"
		class="com.google.enterprise.connector.pusher.DocPusher">
		<constructor-arg index="0" ref="FeedConnection" />
	</bean>

	<!-- Create a Handler for the Feed Logger and add it to the logger -->
	<bean id="FeedFormatter" class="java.util.logging.SimpleFormatter" />

	<bean id="FeedHandler" class="com.google.enterprise.connector.pusher.FeedFileHandler">
		<constructor-arg index="0" value="${catalina.base}/logs/google-connectors.feed%g.log" />
		<constructor-arg index="1" value="52428800" />
		<constructor-arg index="2" value="10" />
		<property name="level" value="FINER" />
		<property name="encoding" value="UTF-8" />
		<property name="formatter" ref="FeedFormatter" />
	</bean>

	<bean id="FeedWrapperLogger" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="com.google.enterprise.connector.pusher.DocPusher.getFeedLogger" />
	</bean>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="FeedWrapperLogger" />
		<property name="targetMethod" value="addHandler" />
		<property name="arguments">
			<list>
				<ref bean="FeedHandler" />
			</list>
		</property>
	</bean>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="FeedWrapperLogger" />
		<property name="targetMethod" value="setUseParentHandlers" />
		<property name="arguments">
			<list>
				<value>false</value>
			</list>
		</property>
	</bean>

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject" ref="FeedWrapperLogger" />
		<property name="targetMethod" value="setLevel" />
		<property name="arguments">
			<list>
				<value>${feedLoggingLevel}</value>
			</list>
		</property>
	</bean>

  <bean id="ConnectorConfigStore"
    class="com.google.enterprise.connector.persist.FileStore">
  </bean>

  <bean id="ConnectorScheduleStore"
    class="com.google.enterprise.connector.persist.FileStore">
  </bean>

  <bean id="ConnectorStateStore"
    class="com.google.enterprise.connector.persist.FileStore">
  </bean>

  <!-- Legacy ConnectorStateStore and ConnectorScheduleStore used for
       upgrading existing connectors created by previous versions of
       the Connector Manager.
  -->
  <bean id="LegacyConnectorScheduleStores" class="java.util.ArrayList">
    <constructor-arg>
      <list>
        <bean class="com.google.enterprise.connector.persist.PrefsStore"/>
      </list>
    </constructor-arg>
  </bean>

  <bean id="LegacyConnectorStateStores" class="java.util.ArrayList">
    <constructor-arg>
      <list>
        <bean class="com.google.enterprise.connector.persist.PrefsStore"/>
      </list>
    </constructor-arg>
  </bean>

  <bean id="LegacyConnectorConfigStores" class="java.util.ArrayList">
    <!-- No Legacy ConnectorConfigStores at this time -->
  </bean>

	<bean id="Instantiator"
		class="com.google.enterprise.connector.instantiator.SpringInstantiator">
		<constructor-arg ref="Pusher" />
	</bean>

	<bean id="Monitor"
		class="com.google.enterprise.connector.monitor.HashMapMonitor" />

	<bean id="WorkQueue"
		class="com.google.enterprise.connector.common.WorkQueue">
		<constructor-arg index="0" type="int" value="20" />
	</bean>

  <bean id="Manager"
    class="com.google.enterprise.connector.manager.ProductionManager">
    <property name="scheduler" ref="TraversalScheduler" />
    <property name="instantiator" ref="Instantiator" />
  </bean>

	<bean id="TraversalScheduler"
		class="com.google.enterprise.connector.scheduler.TraversalScheduler">
		<constructor-arg index="0" ref="Instantiator" />
		<constructor-arg index="1" ref="Monitor" />
		<constructor-arg index="2" ref="WorkQueue" />
	</bean>

  <bean id="TraversalContext"
		 class="com.google.enterprise.connector.traversal.ProductionTraversalContext">
    <property name="fileSizeLimitInfo" ref="FileSizeLimitInfo" />
    <property name="mimeTypeMap" ref="MimeTypeMap" />
  </bean>

  <bean id="FileSizeLimitInfo"
		 class="com.google.enterprise.connector.traversal.FileSizeLimitInfo">
    <!-- Maximum file size accepted by the GSA is 30MB -->
    <property name="maxDocumentSize" value="31457280" />
  </bean>

  <bean id="MimeTypeMap"
		 class="com.google.enterprise.connector.traversal.MimeTypeMap">
    <!-- Setting unknownMimeTypeSupportLevel to a positive value will allow
         the GSA to attempt to index the document contents of documents with
         unrecognized content types.  Set unknownMimeTypeSupportLevel to zero
         (or any other non-positive value) to disable sending document content
         for unknown content types to the GSA.  See unsupportedMimeTypes below.
         Note that unknownMimeTypeSupportLevel (from an earlier design) overlaps
         in functionality with the content types (sans subtypes) entries in the 
         preferred/supported/unsupported mime types below.  This is only because
         all of the IANA recognized content type classes are well represented
         in the tables below, so very few mime types should end up as "unknown".
         Removing content type (sans subtype) entries from the following sets
         would force more mime types to become "unknown".
         The default value of 2 ranks "unknown" mime types below supported
         mime types (levels 3,4,5) and preferred mime types (levels 7,8,9), but
         above unsupported mime types (0 and below).
    -->
    <property name="unknownMimeTypeSupportLevel" value="2" />

    <!-- These three properties group most known mime types into three broad
         classes - preferred, supported, and unsupported.  Connectors may
         use this information to optimize their feeds, supplying preferred
         formats over simply supported formats (if both are available), and
         skipping unsupported formats. The entries of each of these three
         classes are a list of content types that may or may not include
         subtypes.  Exact (case-insensitive) matches are attempted first.
         If a match is not found, a match is attempted using just the base
         type without the subtype.
         For instance, suppose these properties were as follows:
         preferredMimeTypes={} (empty), supportedMimeTypes={"foo/bar"},
         unsupportedMimeTypes={"foo", "cat"}.  "Foo/Bar" matches (case-
         insensitively) "foo/bar", so it would be considered supported.
         "Foo/baz" does not have an exact match, but its content type
         (sans subtype) "foo" does have a match in the unsupported table,
         so it should be considered unsupported. Similarly, "cat/persian"
         would be considered unsupported.  "Xyzzy/bar" lacks an exact
         match, and its content type (sans subtype), "xyzzy", is also not
         present, so it would be assigned the unknownMimeTypeSupportLevel.
         Note that modifying entries in these properties may require
         corresponding modifications to the Google Search Appliance Crawl 
         and Index administration page.  Similarly, modifications to the
         Crawl and Index page may also require changes to these entries.
    -->
    <!-- Sets the preferred mime types to index.
         These mime types require little or no preprocessing
         or file format conversion to extract text and metadata.
    -->
    <property name="preferredMimeTypes">
      <set>
        <!-- Prefer plain text, html, sgml, & xml types  -->
        <value>application/plain</value>
        <value>application/rdf+xml</value>
        <value>application/xhtml+xml</value>
        <value>application/xml</value>
        <value>text/calendar</value>
        <value>text/csv</value>
        <value>text/plain</value>
        <value>text/html</value>
        <value>text/sgml</value>
        <value>text/x-sgml</value>
        <value>text/tab-separated-values</value>
        <value>text/xhtml</value>
        <value>text/xml</value>
        <value>message/http</value>
        <value>message/s-http</value>
        <value>message/news</value>
      </set>
    </property>

    <!--  Sets the supported mime types to index.
          These mime types may require some preprocessing or
          file format conversion to extract text and metadata.
          Some information may be lost or discarded.
    -->
    <property name="supportedMimeTypes">
      <set>
        <!-- Support various well-known document formats -->
        <value>text/richtext</value>
        <value>text/rtf</value>
        <value>application/rtf</value>
        <value>application/x-rtf</value>
        <value>text/troff</value>
        <value>application/x-troff</value>
        <value>application/pdf</value>
        <value>application/postscript</value>
        <value>application/vnd.framemaker</value>
        <value>application/vnd.kde.kpresenter</value>
        <value>application/vnd.kde.kspread</value>
        <value>application/vnd.kde.kword</value>
        <value>application/vnd.lotus-1-2-3</value>
        <value>application/vnd.lotus-freelance</value>
        <value>application/x-freelance</value>
        <value>application/vnd.lotus-notes</value>
        <value>application/vnd.lotus-wordpro</value>
        <value>application/vnd.oasis.opendocument.presentation</value>
        <value>application/vnd.oasis.opendocument.presentation-template</value>
        <value>application/vnd.oasis.opendocument.spreadsheet</value>
        <value>application/vnd.oasis.opendocument.spreadsheet-template</value>
        <value>application/vnd.oasis.opendocument.text</value>
        <value>application/vnd.oasis.opendocument.text-master</value>
        <value>application/vnd.oasis.opendocument.text-template</value>
        <value>application/vnd.oasis.opendocument.text-web</value>
        <value>application/vnd.quark.quarkxpress</value>
        <value>application/vnd.scibus</value>
        <value>application/vnd.wordperfect</value>
        <value>application/wordperfect</value>
        <value>application/wordperfect5.1</value>
        <value>application/wordperfect60</value>
        <value>application/wordperfect61</value>
        <value>application/vnd.visio</value>
        <value>application/x-visio</value>
        <value>application/x-latex</value>
        <value>application/x-tex</value>
        <value>application/x-texinfo</value>
        <value>application/x-pagemaker</value>
        <!-- Support various less-well-known document formats -->
        <value>application/excel</value>
        <value>application/vnd.ms-excel</value>
        <value>application/x-excel</value>
        <value>application/x-msexcel</value>
        <value>application/vnd.ms-htmlhelp</value>
        <value>application/mspowerpoint</value>
        <value>application/powerpoint</value>
        <value>application/vnd.ms-powerpoint</value>
        <value>application/vnd.ms-project</value>
        <value>application/x-project</value>
        <value>application/x-mspublisher</value>
        <value>application/x-msschedule</value>
        <value>application/msword</value>
        <value>application/vnd.ms-works</value>
        <value>application/mswrite</value>
        <value>application/x-mswrite</value>
        <value>application/vnd.ms-xpsdocument</value>
        <!-- Support multipart files with possibly supported subparts -->
        <value>mulitpart/appledouble</value>
        <value>mulitpart/mixed</value>
        <!-- Catch-all to support other text subtypes -->
        <value>text</value>
      </set>
    </property>

    <!-- Sets the unsupported mime types whose content should not be indexed.
         These mime types provide little or no textual content, or are data
         formats that are either unknown or do not have a format converter.
         The connector may still provide meta-data describing the content,
         but the content itself should not be pushed.
    -->
    <property name="unsupportedMimeTypes">
      <set>
        <!-- Don't feed non-text media types -->
        <value>audio</value>
        <value>image</value>
        <value>music</value>
        <value>x-music</value>
        <value>video</value>
        <!-- Don't feed binary executables -->
        <value>application/octet-stream</value>
        <value>application/macbinary</value>
        <value>application/x-binary</value>
        <!-- Don't feed compressed archives -->
        <value>application/binhex</value>
        <value>application/binhex4</value>
        <value>application/gnutar</value>
        <value>application/mac-binhex</value>
        <value>application/mac-binhex40</value>
        <value>application/sea</value>
        <value>application/x-binhex</value>
        <value>application/x-binhex40</value>
        <value>application/x-bzip</value>
        <value>application/x-bzip2</value>
        <value>application/x-compressed</value>
        <value>application/x-gtar</value>
        <value>application/x-gzip</value>
        <value>application/x-lzh</value>
        <value>application/x-sea</value>
        <value>application/x-sit</value>
        <value>application/x-stuffit</value>
        <value>application/x-tar</value>
        <value>application/x-zip</value>
        <value>application/x-zip-compressed</value>
        <value>application/zip</value>
        <value>multipart/x-zip</value>
        <!-- Types explicitly excluded in the default GSA Crawl and Index form. -->
        <value>application/annodex</value>
        <value>application/internet-property-stream</value>
        <value>application/mime</value>
        <value>application/pgp-signature</value>
        <value>application/solids</value>
        <value>application/vnd.acucorp</value>
        <value>application/vnd.koan</value>
        <value>application/vnd.ibm.modcap</value>
        <value>application/x-aim</value>
        <value>application/x-koan</value>
        <value>application/x-msaccess</value>
        <value>application/x-msdownload</value>
        <value>application/x-world</value>
        <value>message/rfc822</value>
        <value>text/asp</value>
        <value>text/vnd.abc</value>
        <value>text/x-audiosoft-intra</value>
        <value>text/x-asm</value>
        <!-- Catch-all for media types that are not explicitly mentioned above. -->
        <value>chemical</value>
        <value>example</value>
        <value>message</value>
        <value>model</value>
        <value>mulitpart</value>
        <value>world</value>
        <value>i-world</value>
        <value>x-world</value>
        <!-- Comment out the following if you want to classify other application
              subtypes as 'unknown mime type' rather than 'unsupported mime type'.
        -->
        <value>application</value> 
      </set>
    </property>
  </bean>
</beans>
