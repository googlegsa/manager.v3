###############LOGGING LEVELS###################
#The levels in descending order are:
#SEVERE (highest value)
#WARNING
#INFO
#CONFIG
#FINE
#FINER
#FINEST (lowest value)
#In addition there is a level OFF that can be used to turn off logging,
#and a level ALL that can be used to enable logging of all messages.

############################################################
#  	Global properties
############################################################
# Default global logging level.
# This specifies which kinds of events are logged across
# all loggers.  For any given facility this global level
# can be overriden by a facility specific level
# Note that the ConsoleHandler also has a separate level
# setting to limit messages printed to the console.

.level=INFO

############################################################
#    Package Specific patterns.
############################################################

## To generate more detailed logging in general, edit the global
## .level property above. To generate more specific logging, uncomment
## and edit one of the following lines.

## Use the following line to configure logging for the Connector Manager
## and all the individual Connectors at once.
com.google.enterprise.connector.level = ALL

## Use the following line to configure logging for the Livelink
## connector separately.
#com.google.enterprise.connector.otex.level = ALL

## Use the following line to configure logging for the Documentum
## connector separately.
#com.google.enterprise.connector.dctm.level = ALL

## Use the following line to configure logging for the SharePoint
## connector separately.
#com.google.enterprise.connector.sharepoint.level = ALL

## Use the following line to configure logging for the LDAP
## connector separately.
#com.google.enterprise.connector.ldap.level = ALL

## Use the following line to configure logging for the File System
## connector separately.
#com.google.enterprise.connector.filesystem.level = ALL

## Use the following line to configure logging for the FileList
## connector separately.
#com.google.enterprise.connector.flist.level = ALL

## Use the following line to configure logging for the FileNet
## connector separately.
#com.google.enterprise.connector.file.level = ALL

## Use the following line to configure logging for the Database
## connector separately.
#com.google.enterprise.connector.db.level = ALL


##### CATALINA LOGS #####
org.apache.catalina.level=SEVERE
#org.apache.catalina.loader.WebappClassLoader.level=SEVERE
#org.apache.catalina.startup.ClassLoaderFactory.level=SEVERE
#org.apache.catalina.startup.Bootstrap.level=SEVERE

org.apache.level=INFO

#####  TOMCAT LOGS #####
org.apache.tomcat.util.level=SEVERE
util.digester.Digester.level=SEVERE
org.springframework.level=SEVERE
JMX.mbean.level=SEVERE
org.apache.axis.level=SEVERE
javax.net.level=SEVERE

#####  HTTPCLIENT LOGS #####
#org.apache.commons.httpclient.HttpMethodBase.level=SEVERE
httpclient.wire.level=SEVERE
org.apache.commons.httpclient.level=SEVERE


############################################################
# "handlers" specifies a comma separated list of log Handler
# classes.  These handlers will be installed during VM startup.
# Note that these classes must be on the system classpath.

handlers = java.util.logging.FileHandler
# ConsoleHandler is disabled
#, java.util.logging.ConsoleHandler
############################################################

############################################################
#    Handler specific properties.
############################################################

###############LOGGING PATTERNS###################
# "/" the local pathname separator
# "%t" the system temporary directory
# "%h" the value of the "user.home" system property
# "%g" the generation number to distinguish rotated logs
# "%u" a unique number to resolve conflicts
# "%%" translates to a single percent sign "%
#-----------------------------------------------------------------------------------------------------------
#Refer: http://java.sun.com/j2se/1.5.0/docs/api/java/util/logging/FileHandler.html
#-----------------------------------------------------------------------------------------------------------

############## PROPERTIES FOR FILE HANDLER #################
###java.util.logging.FileHandler.level specifies the default level for the Handler (defaults to Level.ALL).
java.util.logging.FileHandler.level=ALL

###java.util.logging.FileHandler.pattern specifies a pattern for generating the output file name.
###See LOGGING PATTERNS above for details. (Defaults to "%h/java%u.log").
java.util.logging.FileHandler.pattern = ${catalina.base}/logs/google-connectors-@MANAGER-NUMBER@.%g.log

###java.util.logging.FileHandler.limit specifies an approximate maximum amount to write (in bytes) to any one file.
###If this is zero, then there is no limit. (Defaults to no limit).
### log file size (in bytes) 52428800 ~ 50 MB
java.util.logging.FileHandler.limit = 52428800

###java.util.logging.FileHandler.count specifies how many output files to cycle through (defaults to 1).
java.util.logging.FileHandler.count = 10

###java.util.logging.FileHandler.encoding the name of the character set encoding to use (defaults to the default platform encoding).
java.util.logging.FileHandler.encoding=UTF-8

###java.util.logging.FileHandler.formatter specifies the name of a Formatter class to use (defaults to java.util.logging.XMLFormatter)
### Note that these classes must be on the system classpath.
java.util.logging.FileHandler.formatter = com.google.enterprise.connector.logging.SimpleFormatter

### Configures the format of the log messages.
### See: http://code.google.com/p/google-enterprise-connector-manager/wiki/ContextLogging
#com.google.enterprise.connector.logging.SimpleFormatter.format=%d [%x] %p: %C{2}.%M(): %m%n
#com.google.enterprise.connector.logging.XmlFormatter.format=log4j

############################################################

############# PROPERTIES FOR CONSOLE HANDLER ###############
# Limit the message that are printed on the console to INFO and above.
#java.util.logging.ConsoleHandler.level = INFO
#java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter
#java.util.logging.ConsoleHandler.layout.ConversionPattern=%d{MM-dd@HH:mm:ss} %5p [%t] (%F:%L) - %m%n
############################################################
