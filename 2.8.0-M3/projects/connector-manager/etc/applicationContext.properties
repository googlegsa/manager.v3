# Google Search Appliance Connector Manager Configuration
#
googlePropertiesVersion=3

# The 'gsa.feed.host' property specifies the host IP address for the
# feed host on the GSA.
# For example:
#   gsa.feed.host=172.24.2.0
gsa.feed.host=localhost

# The 'gsa.feed.port' property specifies the host port for the feed
# host on the GSA.
# For example:
#   gsa.feed.port=19900
gsa.feed.port=19900

# The 'manager.locked' property is used to lock out the Admin Servlet
# and prevent it from making changes to this configuration file.
# Specifically, the ability to set the FeedConnection properties will
# be locked out.  If it is set to 'true' or missing the Servlet will
# not be allowed to update this file.
# NOTE: This property will automatically be changed to 'true' upon
# successful update of the file by the Servlet.  Therefore, once the
# FeedConnection properties are successfully updated by the Servlet
# subsequent updates will be locked out until the flag is manually
# reset to 'false'.
manager.locked=false

# The 'feedLoggingLevel' property controls the logging of the feed
# record to a log file.  The log record will contain the feed XML
# without the content data.  Set this property to 'ALL' to enable feed
# logging, 'OFF' to disable.  Customers and developers can use this
# functionality to observe the feed record and metadata information
# the connector manager sends to the GSA.
# For example:
#   feedLoggingLevel=OFF
# feedLoggingLevel=OFF

# If you set the 'teedFeedFile' property to the name of an existing
# file, whenever the connector manager feeds content to the GSA, it
# will write a duplicate copy of the feed XML to the file specified by
# the teedFeedFile property.  GSA customers and third-party developers
# can use this functionality to observe the content the connector
# manager sends to the GSA and reproduce any issue which may arise.
# NOTE: The teedFeedFile will contain all feed data sent to the GSA,
# including document content and metadata.  The teedFeedFile can
# therefore grow quite large very quickly.
# For example:
#   teedFeedFile=/tmp/CMTeedFeedFile
# teedFeedFile=

# The 'feed.backlog.*' properties are used to throttle back the
# document feed if the GSA has fallen behind processing outstanding
# feed items.  The Connector Manager periodically polls the GSA,
# fetching the count of unprocessed feed items (the backlog count).
# If the backlog count exceeds the ceiling value, feeding is paused.
# Once the backlog count drops down below the floor value, feeding
# resumes.
# Stop feeding the GSA if its backlog exceeds this value.
# feed.backlog.ceiling=10000
# Resume feeding the GSA if its backlog falls below this value.
# feed.backlog.floor=1000
# How often to check for feed backlog (in seconds).
# feed.backlog.interval=900

# The 'feed.timezone' property defines the default time zone used
# for Date metadata values for Documents.  A null or empty string
# indicates that the system timezone of the machine running the
# Connector Manager should be used.  Standard TimeZone identifiers
# may be used.  For example:
#   feed.timezone=America/Los_Angeles
# If a standard TimeZone identifier is unavailable, then a custom
# TimeZone identifier can be constructed as +/-hours[minutes] offset
# from GMT.  For example:
#   feed.timezone=GMT+10    # GMT + 10 hours
#   feed.timezone=GMT+0630  # GMT + 6 hours, 30 minutes
#   feed.timezone=GMT-0800  # GMT - 8 hours, 0 minutes
# feed.timezone=

# The 'feed.file.size' property sets the target size, in bytes, of
# an accumulated feed file. The Connector Manager tries to collect
# many feed Documents into a single feed file to improve the
# efficiency of sending feed data to the GSA.  Specifying too small
# a value may result in many small feeds which might overrun the
# GSA's feed processor.  However, specifying too large a feed size
# reduces concurrency and may result in OutOfMemory errors in the
# Java VM, especially if using multiple Connector Instances.
# The default target feed size is 10MB.
# feed.file.size=10485760

# The 'feed.document.size.limit' property defines the maximum
# allowed size in bytes of a Document's content.  Documents whose
# content exceeds this size will still have metadata indexed,
# however the content itself will not be fed.  The default value
# is 30MB, the maximum file size accepted by the GSA.
# feed.document.size.limit=31457280

# The 'traversal.batch.size' property defines the optimal number
# of items to return in each repository traversal batch.  The batch
# size represents the size of the roll-back that occurs during a
# failure condition.  Batch sizes that are too small may incur
# excessive processing overhead.  Batch sizes that are too large
# may produce OutOfMemory conditions within a Connector or result
# in early termination of the batch if processing time exceeds the
# travesal.time.limit.
# traversal.batch.size=500

# The 'traversal.poll.interval' property defines the number of
# seconds to wait after a traversal of the repository finds no new
# content before looking again.  Short intervals allow new content
# to be readily available for search, at the cost of increased
# repository access.  Long intervals add latency before new
# content becomes available for search.  By default, the Connector
# Manager waits 5 minutes (300 seconds) before retraversing the
# repository if no new content was found on the last traversal.
# traversal.poll.interval=300

# The 'traversal.time.limit' property defines the number of
# seconds a traversal batch should run before gracefully exiting.
# Traversals that exceed this time period risk cancelation.
# The default time limit is 30 minutes (1800 seconds).
# traversal.time.limit=1800

# The 'traversal.enabled' property is used to enable or disable
# Traversals and Feeds for all connector instances in this
# Connector Manager.  Disabling Traversal would be desirable if
# configuring a Connector Manager deployment that only authorizes
# search results.  Traversals are enabled by default.
# traversal.enabled=false

# The 'config.change.detect.interval' property specifies how often
# (in seconds) to look for asynchronous configuration changes.
# Values <= 0 imply never.  For stand-alone deployments, long
# intervals or never are probably sufficient.  For clustered
# deployments with a shared configuration store, 60 to 300 seconds
# is probably sufficient.  The default configuration change
# detection interval is 0 (never).
# config.change.detect.interval=60
