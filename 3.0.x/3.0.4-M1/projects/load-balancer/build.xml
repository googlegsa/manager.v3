<?xml version="1.0" encoding="UTF-8"?>

<!-- Load Balancer buildfile. This build requires ant 1.8.0 or newer. -->
<project name="load-balancer" default="all" basedir=".">

  <!-- ========================= PROPERTIES ============================= -->

  <property name="projects.dir" value=".." />
  <property file="${projects.dir}/version.properties"/>
  <property file="${user.home}/google-enterprise-connector-manager.properties"/>

  <!-- Fetch catalina.base from CATALINA_BASE or CATALINA_HOME env vars -->
  <property environment="env"/>
  <condition property="catalina.base" value="${env.CATALINA_BASE}">
    <isset property="env.CATALINA_BASE"/>
  </condition>
  <condition property="catalina.base" value="${env.CATALINA_HOME}">
    <isset property="env.CATALINA_HOME"/>
  </condition>

  <!-- Define Directories. -->

  <property name="connector-manager.dir" value="${projects.dir}/connector-manager" />
  <property name="COMPILE_DEBUG_FLAG" value="true" />
  <property name="COMPILE_DEBUG_LEVEL" value="source,lines,vars" />
  <property name="jvm.version" value="1.5" />
  <property name="COMPILE_BOOTCLASSPATH" value="${build.bootclasspath}" />

  <property name="build" value="build" />
  <property name="conf" value="conf" />
  <property name="dist" value="dist" />
  <property name="prod" value="${build}/prod" />
  <property name="src" value="source/java" />
  <property name="classes" value="${prod}/classes" />
  <property name="jar.dir" value="${dist}/jarfile" />
  <property name="valve.jarfile" value="${jar.dir}/balancer-valve.jar" />

  <property name="catalina-base.dir" value="${catalina.base}" />
  <property name="catalina-bin.dir" value="${catalina.base}/bin" />
  <property name="catalina-conf.dir" value="${catalina.base}/conf" />
  <property name="catalina-lib.dir" value="${catalina-base.dir}/lib" />
  <property name="catalina-webapps.dir" value="${catalina-base.dir}/webapps" />

  <!-- =========================== TASKS =============================== -->
  <include file="${projects.dir}/svnbuild.xml" as="svn"/>

  <target name="all" depends="deploy-all" />
  <target name="deploy-all"
          depends="connector-manager, deploy-setenv, deploy-valve, deploy-managers" />

  <target name="init">
   <fail unless="catalina.base"
         message="You must specify 'catalina.base' property pointing to deployment target Tomcat installation." />
    <mkdir dir="${build}" />
    <mkdir dir="${prod}" />
    <mkdir dir="${dist}" />
    <mkdir dir="${classes}" />
    <mkdir dir="${jar.dir}" />
  </target>

  <target name="clean" description="Deletes all build files.">
    <delete dir="${build}" />
    <delete dir="${dist}" />
  </target>

  <target name="connector-manager">
    <ant inheritAll="false" dir="${connector-manager.dir}" />
  </target>

  <!-- Compile the BalancerValve. -->
  <target name="compile-valve" depends="init">
    <!-- compile the valve java source files -->
    <javac sourcepath="" srcdir="${src}" destdir="${classes}"
           includeantruntime="false"
           debug="${COMPILE_DEBUG_FLAG}" debuglevel="${COMPILE_DEBUG_LEVEL}"
           target="${jvm.version}" source="${jvm.version}">
      <bootclasspath path="${COMPILE_BOOTCLASSPATH}"/>
      <classpath>
        <fileset dir="${catalina-lib.dir}" includes="*.jar" />
        <pathelement location="${catalina-bin.dir}/tomcat-juli.jar"/>
      </classpath>
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Xlint:-serial"/>
    </javac>
  </target>

  <!-- Build the BalancerValve jar file. -->
  <target name="jar-valve" depends="compile-valve, svn.svn-branch-version"
          description="Create production valve jar">
    <tstamp />
    <jar jarfile="${valve.jarfile}">
      <fileset dir="${classes}"/>
      <manifest>
        <attribute name="Implementation-Title"
                   value="Connector Manager Load Balancer Valve"/>
        <attribute name="Implementation-Version"
                   value="${version} (build ${svn.branch.version} ${TODAY})"/>
        <attribute name="Implementation-Vendor" value="Google Inc."/>
      </manifest>
    </jar>
  </target>

  <!-- Check to see if Tomcat/bin contains a setenv.sh -->
  <condition property="setenv.exists">
    <resourceexists>
      <file file="${catalina-bin.dir}/setenv.sh"/>
    </resourceexists>
  </condition>

  <!-- Add a Tomcat/bin/setenv.sh with Connector-specific environment. -->
  <target name="deploy-setenv" unless="setenv.exists" depends="init">
    <copy file="${conf}/setenv.sh" todir="${catalina-bin.dir}"/>
  </target>

  <!-- Deploy BalancerValve into Tomcat. -->
  <target name="deploy-valve" depends="jar-valve, add-valve, add-crosscontext">
    <copy file="${valve.jarfile}" todir="${catalina-lib.dir}"/>
  </target>

  <!-- Add BalancerValve to conf/server.xml if not already configured. -->
  <condition property="serverxml.contains.valve">
    <resourcecontains resource="${catalina-conf.dir}/server.xml"
                      substring="LoadBalancerValve"/>
  </condition>
  <target name="add-valve" unless="serverxml.contains.valve">
    <echo>Adding BalancerValve to ${catalina-conf.dir}/server.xml</echo>
    <loadfile property="valve.config"
              srcFile="${conf}/valveConfig.xml"/>
    <replace file="${catalina-conf.dir}/server.xml" token="&lt;/Engine&gt;"
             value="${valve.config}&lt;/Engine&gt;"/>
  </target>

  <!-- Add crossContext to conf/context.xml if not already configured. -->
  <condition property="contextxml.contains.crosscontext">
    <resourcecontains resource="${catalina-conf.dir}/context.xml"
                      substring="crossContext"/>
  </condition>
  <target name="add-crosscontext" unless="contextxml.contains.crosscontext">
    <echo>Adding crossContext to ${catalina-conf.dir}/context.xml</echo>
    <replace file="${catalina-conf.dir}/context.xml" token="&lt;Context&gt;"
             value="&lt;Context crossContext=&quot;true&quot;&gt;"/>
  </target>

  <!-- Deploy 2 Connector Managers, only one of them a traverser. -->
  <target name="deploy-managers" depends="init, connector-manager">
    <fail unless="gsa.feed.host"
          message="You must specify 'gsa.feed.host' property containing hostname or IP address of feed host." />

    <!-- Copy third-party jars to shared lib directory. -->
    <copy todir="${catalina-lib.dir}">
      <fileset dir="${connector-manager.dir}/third-party/prod"
               includes="*.jar" excludes="servlet-api.jar"/>
    </copy>

    <!-- Copy Connector Context Logging to shared lib directory. -->
    <copy file="${projects.dir}/install/connector-manager/jarfile/connector-logging.jar"
          todir="${catalina-lib.dir}"/>

    <!-- Create directory for data shared between Connector Managers -->
    <mkdir dir="${catalina-base.dir}/shared/connector-manager"/>

    <!-- Deploy connector-manager-1 -->
    <antcall target="_deploy-connector-manager">
      <param name="manager-number" value="1"/>
      <param name="traversal-enabled" value="true"/>
      <param name="deploy-dir"
             value="${catalina-webapps.dir}/connector-manager-1"/>
    </antcall>

    <!-- Deploy connector-manager-2 -->
    <antcall target="_deploy-connector-manager">
      <param name="manager-number" value="2"/>
      <param name="traversal-enabled" value="false"/>
      <param name="deploy-dir"
             value="${catalina-webapps.dir}/connector-manager-2"/>
    </antcall>
  </target>

  <!-- Deploy a Connector Manager. Do not build this target this directly. -->
  <target name="_deploy-connector-manager">
    <fail unless="deploy-dir"
          message="Don't run 'deploy-connector-manager' target directly." />

    <mkdir dir="${deploy-dir}/WEB-INF/lib"/>
    <mkdir dir="${deploy-dir}/WEB-INF/classes"/>
    <mkdir dir="${deploy-dir}/WEB-INF/connectors"/>

    <!-- Copy Connector Manager jars to Connector Manager lib directory. -->
    <copy todir="${deploy-dir}/WEB-INF/lib">
      <fileset dir="${projects.dir}/install/connector-manager/jarfile"
               includes="*.jar" excludes="connector-logging.jar"/>
    </copy>
    <!-- TODO: Copy Connector-specific jars. -->

    <!-- Copy some connector files unmodified - others require customization. -->
    <copy todir="${deploy-dir}">
      <fileset dir="${connector-manager.dir}/source/html"
               excludes="index.html"/>
    </copy>
    <copy todir="${deploy-dir}/WEB-INF">
      <fileset dir="${connector-manager.dir}/etc"
               excludes="applicationContext.properties, applicationContext.xml"/>
    </copy>

    <!-- Make it easier to identify which Connector Manager we land on. -->
    <copy file="${connector-manager.dir}/source/html/index.html"
          todir="${deploy-dir}">
      <filterchain>
        <replaceregex pattern="Connector Manager Home"
                      replace="Connector Manager ${manager-number} Home"/>
        <replaceregex pattern="&lt;meta[ \t]+http-equiv=&quot;refresh&quot;[^&gt;]*&gt;"
                      replace="&lt;!-- \0 --&gt;"/>
      </filterchain>
    </copy>

    <!-- Configure shared keystore. -->
    <copy file="${connector-manager.dir}/source/webdocs/web.xml"
          todir="${deploy-dir}/WEB-INF">
      <filterset begintoken="&gt;" endtoken="&lt;">
        <filter token="connector_manager.keystore"
                value="&gt;$${catalina.base}/shared/connector-manager/connector_manager.keystore&lt;"/>
      </filterset>
    </copy>

    <!-- Configure shared Connector config store. Only a single traverser is allowed. -->
    <copy file="${connector-manager.dir}/etc/applicationContext.properties"
          todir="${deploy-dir}/WEB-INF">
      <filterchain>
        <replaceregex pattern="[ \t]*gsa.feed.host[ \t]*=[ \t]*localhost"
                      replace="gsa.feed.host=${gsa.feed.host}"/>
        <replaceregex pattern="[ \t]*#[ \t]*traversal.enabled[ \t]*=[ \t]*(true|false)"
                      replace="traversal.enabled=${traversal-enabled}"/>
        <replaceregex pattern="[ \t]*#[ \t]*config\.change\.detect\.interval"
                      replace="config.change.detect.interval"/>
        <concatfilter append="${conf}/jdbc.datasource.properties"/>
      </filterchain>
    </copy>

    <!-- Configure separate feed logs for each connector manager. -->
    <copy file="${connector-manager.dir}/etc/applicationContext.xml"
          todir="${deploy-dir}/WEB-INF">
      <filterset begintoken="/" endtoken="%">
        <filter token="google-connectors.feed"
                value="/google-connectors-${manager-number}.feed%"/>
      </filterset>
    </copy>

    <!-- Configure separate logging for each connector manager. -->
    <copy file="${conf}/logging.properties"
          todir="${deploy-dir}/WEB-INF/classes">
      <filterset>
        <filter token="MANAGER-NUMBER" value="${manager-number}"/>
      </filterset>
    </copy>
  </target>

</project>
