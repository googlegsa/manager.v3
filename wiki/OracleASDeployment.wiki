#summary Instructions about how to deploy Connector Manager on Oracle Application Server.

= Introduction =
*BE AWARE: THIS IS A DRAFT*

Here you will find instructions about how to deploy Google Connector Manager in OracleAS 10g and, specifically, in the 10.1.3 version of the standalone JEE server called OC4J. This deployment has been done only for testing and demo purposes and it is not supported in any way.


= Requirements =

In order to successfully complete this deployment tutorial, you will need to download and install the following components:

  # Google Connector Manager [http://google-enterprise-connector-manager.googlecode.com/files/connector-manager-1.0.3.zip binaries] and [http://google-enterprise-connector-manager.googlecode.com/files/connector-manager-1.0.3-src.zip source code]
  # [http://www.oracle.com/technology/tech/java/oc4j/index.html Oracle Containers for Java EE (aka OC4J) 10.1.3]
  # [http://www.oracle.com/technology/software/products/jdev/index.html Oracle JDeveloper 10.1.3]

All the instructions explained here has been done for and tested in Windows XP Professional operating system, although OC4J is a quite portable JEE engine and you should be able replicate the deployment in Linux or any other operating system supported by OC4J.

JDeveloper and OC4J are really easy to install. Just follow Oracle instructions.

= JDeveloper customization =

In order to successfully compile and deploy the connector manager in OC4J, you need to add  JUnit testing environment to JDevloper. You can easily download it as a JDeveloper plugin, usint the _*Help->Check for Updates...*_ option of JDeveloper.

= Connector Compilation and deployment = 

The easiest way to deploy and test the connector manager in OC4J is to create a war file with:

  * Connector manager and additional needed libraries.
  * Mock connector and third party components needed (JSON libraries, for example).
  * Connector configuration files

You will learn how to easily build that war file using JDeveloper, following the next steps:

  # Copy the following libs somew
Create a JDeveloper application with an emp