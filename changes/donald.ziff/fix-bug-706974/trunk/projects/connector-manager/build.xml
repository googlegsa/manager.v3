<?xml version="1.0" encoding="UTF-8"?>


<project name="connector-manager" default="connector_manager" basedir=".">

	<!-- ========================= PROPERTIES ============================= -->
	<property name="version" value="1.0" />

	<!-- Define Directories. -->
	<property name="projects.dir" value=".." />

	<property name="COMPILE_DEBUG_FLAG" value="true" />
	<property name="COMPILE_DEBUG_LEVEL" value="source,lines,vars" />

	<property name="build" value="build" />
	<property name="prod" value="${build}/prod" />
	<property name="dist" value="dist" />
	<property name="src" value="source/java" />
	<property name="classes" value="${prod}/classes" />
	<property name="webdocs" value="source/webdocs" />

	<property name="tests.src" value="source/javatests" />
	<property name="tests.build" value="build/tests" />
	<property name="tests.classes" value="${tests.build}/classes" />
	<property name="tests.todir" value="tests_outdir" />
	<property name="jar.dir" value="${dist}/jarfile" />
	<property name="spi.jarfile" value="${jar.dir}/connector_spi.jar" />
	<property name="util.jarfile" value="${jar.dir}/connector_util.jar" />
	<property name="connector.jarfile" value="${jar.dir}/connector.jar" />
	<property name="tests.jarfile" value="${jar.dir}/connector_tests.jar" />
	<property name="thirdparty.prod.jars" value="third-party/prod" />
	<property name="thirdparty.tests.jars" value="third-party/tests" />
	<property name="junit.jarfile" value="${thirdparty.prod.jars}/junit.jar" />

	<!-- The directory where all war-files are collected -->
	<property name="war.dir" value="${dist}/${ant.project.name}" />

	<!-- =========================== TASKS =============================== -->
	<target name="test_connector_jars">
		<ant inheritAll="false" antfile="${projects.dir}/test-connectorA/build.xml" />
		<ant inheritAll="false" antfile="${projects.dir}/test-connectorB/build.xml" />
	</target>

	<target name="connector_manager" description="Google Enterprise Connector Manager" depends="war">
	</target>

	<target name="all" depends="connector_manager,run_tests">
	</target>

	<target name="connector_spi" depends="init,compile,jar">
	</target>

	<target name="spi-javadoc">
		<javadoc access="public" author="false" destdir="doc/javadoc/spi" doctitle="Google Search Appliance Connector SPI" nodeprecated="false" nodeprecatedlist="true" noindex="false" nonavbar="false" notree="false" source="1.4" sourcepath="${src}" splitindex="true" use="true" version="true">
			<fileset dir="${src}/com/google/enterprise/connector/spi">
				<include name="*.java" />
			</fileset>
		</javadoc>
	</target>

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${prod}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${classes}" />
		<mkdir dir="${tests.build}" />
		<mkdir dir="${tests.classes}" />
		<mkdir dir="${tests.todir}" />
		<mkdir dir="${jar.dir}" />
	</target>

	<target name="compile" depends="init">
		<!-- compile java source files -->
		<javac srcdir="${src}" destdir="${classes}" debug="${COMPILE_DEBUG_FLAG}" debuglevel="${COMPILE_DEBUG_LEVEL}">
			<classpath>
				<pathelement location="${thirdparty.prod.jars}" />
				<fileset dir="${thirdparty.prod.jars}" includes="**/*.jar" />
			</classpath>
		</javac>
	</target>

	<target name="compile_tests" depends="init,compile">
		<!-- compile java source files for tests -->
		<javac srcdir="${tests.src}" destdir="${tests.classes}" debug="${COMPILE_DEBUG_FLAG}" debuglevel="${COMPILE_DEBUG_LEVEL}">
			<classpath>
				<pathelement location="${classes}" />
				<pathelement location="${thirdparty.prod.jars}" />
				<fileset dir="${thirdparty.prod.jars}" includes="**/*.jar" />
				<pathelement location="${thirdparty.tests.jars}" />
				<fileset dir="${thirdparty.tests.jars}" includes="**/*.jar" />
			</classpath>
		</javac>
	</target>

	<target name="run_tests" depends="compile_tests">
		<junit haltonfailure="yes">
			<classpath>
				<pathelement location="${classes}" />
				<pathelement location="${thirdparty.prod.jars}" />
				<fileset dir="${thirdparty.prod.jars}" includes="**/*.jar" />
				<pathelement location="${thirdparty.tests.jars}" />
				<fileset dir="${thirdparty.tests.jars}" includes="**/*.jar" />
				<pathelement location="${projects.dir}/test-connectorA/dist/jar/testconnectorA.jar" />
				<pathelement location="${projects.dir}/test-connectorB/dist/jar/testconnectorB.jar" />
				<pathelement location="${tests.classes}" />
				<pathelement path="${java.class.path}" />
				<!-- The following line is needed because some tests use tesdata in 
				${tests.src}/com/google/enterprise/connector/testdata 
				TODO: refactor those tests to use the testdata directory that all the other tests use: 
				"testdata" (relative to this directory) -->
				<pathelement location="${tests.src}" />
			</classpath>
			<formatter type="plain" />
			<batchtest fork="yes" todir="${tests.todir}">
				<fileset dir="${tests.src}" includes="**/*Test.java" />
			</batchtest>
		</junit>
	</target>

	<target name="jar" depends="compile" description="Create a jar for the Connector SPI project">
		<jar jarfile="${spi.jarfile}">
			<fileset dir="${classes}" includes="**/spi/**" excludes="**/javatests/**" />
		</jar>
		<jar jarfile="${util.jarfile}">
			<fileset dir="${classes}">
				<include name="**/servlet/ConnectorMessageCode.class" />
				<include name="**/servlet/ServletUtil.class" />
				<include name="**/servlet/SAXParseErrorHandler.class" />
			</fileset>
		</jar>
		<jar jarfile="${connector.jarfile}">
			<fileset dir="${classes}" includes="**/*.class" excludes="**/spi/**" />
		</jar>
		<jar jarfile="${tests.jarfile}">
			<fileset dir="${tests.classes}" includes="**/*.class" excludes="**/spi/**" />
		</jar>
	</target>

	<target name="clean" description="Deletes all build files.">
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${tests.todir}" />
	</target>

	<!-- ======================Installation targets====================== -->

	<target name="install_init">
		<mkdir dir="${war.dir}" />
	</target>

	<!--  Builds a Web Archive - basically a JAR file which
	also contains all and can be deployed as-is.
	-->

	<target name="war" depends="install_init,jar,test_connector_jars" description="Builds the WAR file for installation.">
		<echo> The war file dir is located at ${war.dir}</echo>

		<war warfile="${war.dir}/${ant.project.name}.war" webxml="${webdocs}/web.xml">
			<lib dir="${jar.dir}" includes="*.jar" excludes="connector_tests.jar" />
			<lib dir="${thirdparty.prod.jars}" includes="*.jar" excludes="servlet-api.jar" />
			<webinf dir="etc" includes="**" />
		</war>

		<war warfile="${war.dir}/${ant.project.name}_debug.war" webxml="${webdocs}/web.xml">
			<lib dir="${jar.dir}" includes="*.jar" />
			<lib dir="${thirdparty.prod.jars}" includes="*.jar" excludes="servlet-api.jar" />
			<webinf dir="etc" includes="**" />
			<!-- above this line is all the stuff that goes in the normal prod jar, 
				below is the stuff that is only needed for testing -->
			<lib dir="${thirdparty.tests.jars}" includes="*.jar" />
			<webinf dir="testdata/mocktestdata" includes="MockRepositoryEventLog*.txt" />
			<webinf dir="testdata/mocktestdata" includes="test.doc" />
		</war>

	</target>

</project>
